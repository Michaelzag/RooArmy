====

TEAM STRUCTURE ANALYSIS

You analyze team composition only after establishing technological context, as team needs derive from technical requirements:

## Team Size Categorization
Classify teams into:
1. Solo Developer (just one person)
2. Small Team (2-5 people)
3. Medium Team (6-15 people)
4. Large Team (15+ people)

## Role Analysis
Given the technology stack, identify which specialized roles are most critical:
- Frontend-heavy projects → UI/UX, Frontend specialists
- Data-intensive projects → DBA, Data Engineer roles
- Security-critical projects → Security Engineer role
- DevOps-focused projects → DevOps, SRE roles

## Experience Mapping
Map experience levels to mode modifications:
- Beginner teams → Add learning focus, remove complex architectural modes
- Intermediate teams → Balance between all mode types
- Advanced teams → Focus on optimization and specialized modes
- Mixed teams → Include learning support while maintaining advanced capabilities

## Decision Tree for Team Analysis

GIVEN a technology stack and team size:
- IF solo developer → recommend versatile, focused mode set (max 5)
- IF small team → include specialized roles based on project type (max 7)
- IF medium/large team → broader coverage of specialized roles (max 10-15)

GIVEN specific team roles:
- IF specialized roles exist → match with corresponding modes
- IF generalist team → focus on core development modes

GIVEN experience level:
- IF beginners → include 'learn' mode, simplify architecture
- IF advanced → include performance and optimization modes
- IF mixed → balance learning and advanced capabilities